{"version":3,"file":"psn-api.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/authenticate/AUTH_BASE_URL.ts","../src/authenticate/exchangeCodeForAccessToken.ts","../src/authenticate/exchangeNpssoForCode.ts","../src/authenticate/exchangeRefreshTokenForAuthTokens.ts","../src/models/trophy-rarity.model.ts","../src/utils/buildRequestUrl.ts","../src/utils/call.ts","../src/search/SEARCH_BASE_URL.ts","../src/search/makeUniversalSearch.ts","../src/trophy/TROPHY_BASE_URL.ts","../src/trophy/title/getTitleTrophies.ts","../src/trophy/title/getTitleTrophyGroups.ts","../src/trophy/user/getUserTitles.ts","../src/trophy/user/getUserTrophiesEarnedForTitle.ts","../src/trophy/user/getUserTrophyGroupEarningsForTitle.ts","../src/trophy/user/getUserTrophyProfileSummary.ts","../src/user/USER_BASE_URL.ts","../src/user/getProfileFromAccountId.ts","../src/user/getProfileFromUserName.ts","../src/user/getUserFriendsAccountIds.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const AUTH_BASE_URL = \"https://ca.account.sony.com/api/authz/v3/oauth\";\n","import fetch from \"isomorphic-unfetch\";\n\nimport type { AuthTokensResponse } from \"../models\";\nimport { AUTH_BASE_URL } from \"./AUTH_BASE_URL\";\n\n/**\n * @param accessCode Your access code, typically retrieved by using `exchangeNpssoForCode()`.\n * @returns An object containing an access token, refresh token, and expiry times for both.\n */\nexport const exchangeCodeForAccessToken = async (\n  accessCode: string\n): Promise<AuthTokensResponse> => {\n  const requestUrl = `${AUTH_BASE_URL}/token`;\n\n  const res = await fetch(requestUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization:\n        \"Basic YWM4ZDE2MWEtZDk2Ni00NzI4LWIwZWEtZmZlYzIyZjY5ZWRjOkRFaXhFcVhYQ2RYZHdqMHY=\"\n    },\n    body: new URLSearchParams({\n      code: accessCode,\n      redirect_uri: \"com.playstation.PlayStationApp://redirect\",\n      grant_type: \"authorization_code\",\n      token_format: \"jwt\"\n    }).toString()\n  });\n\n  const raw = await res.json();\n\n  return {\n    accessToken: raw.access_token,\n    expiresIn: raw.expires_in,\n    idToken: raw.id_token,\n    refreshToken: raw.refresh_token,\n    refreshTokenExpiresIn: raw.refresh_token_expires_in,\n    scope: raw.scope,\n    tokenType: raw.token_type\n  };\n};\n","import fetch from \"isomorphic-unfetch\";\n\nimport { AUTH_BASE_URL } from \"./AUTH_BASE_URL\";\n\n/**\n *\n * @param npssoToken Your NPSSO token, retrieved from https://ca.account.sony.com/api/v1/ssocookie\n * @returns An access code, which can be exchanged for an access token using `exchangeCodeForAccessToken`.\n * @example\n * ```ts\n * const code = await exchangeNpssoForCode(\"myNpssoToken\");\n *\n * console.log(code) // --> \"v3.XXXXXX\"\n * ```\n */\nexport const exchangeNpssoForCode = async (\n  npssoToken: string\n): Promise<string> => {\n  const queryString = new URLSearchParams({\n    access_type: \"offline\",\n    client_id: \"ac8d161a-d966-4728-b0ea-ffec22f69edc\",\n    redirect_uri: \"com.playstation.PlayStationApp://redirect\",\n    response_type: \"code\",\n    scope: \"psn:mobile.v1 psn:clientapp\"\n  }).toString();\n\n  const requestUrl = `${AUTH_BASE_URL}/authorize?${queryString}`;\n\n  // This never returns a 200. As of Oct 10 2021, it seems to return a 302.\n  const { headers: responseHeaders } = await fetch(requestUrl, {\n    headers: {\n      Cookie: `npsso=${npssoToken}`\n    },\n    redirect: \"manual\"\n  });\n\n  // The access code itself is stored in a header on the response.\n  // We'll perform a few validations to ensure it's actually there.\n  if (\n    !responseHeaders.has(\"location\") ||\n    !responseHeaders.get(\"location\")?.includes(\"?code=\")\n  ) {\n    throw new Error(`\n      There was a problem retrieving your PSN access code. Is your NPSSO code valid?\n      To get a new NPSSO code, visit https://ca.account.sony.com/api/v1/ssocookie.\n    `);\n  }\n\n  const redirectLocation = responseHeaders.get(\"location\") as string;\n  const redirectParams = new URLSearchParams(\n    redirectLocation.split(\"redirect/\")[1]\n  );\n\n  return redirectParams.get(\"code\") as string;\n};\n","import fetch from \"isomorphic-unfetch\";\n\nimport type { AuthTokensResponse } from \"../models\";\nimport { AUTH_BASE_URL } from \"./AUTH_BASE_URL\";\n\nexport const exchangeRefreshTokenForAuthTokens = async (\n  refreshToken: string\n): Promise<AuthTokensResponse> => {\n  const requestUrl = `${AUTH_BASE_URL}/token`;\n\n  const res = await fetch(requestUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization:\n        \"Basic YWM4ZDE2MWEtZDk2Ni00NzI4LWIwZWEtZmZlYzIyZjY5ZWRjOkRFaXhFcVhYQ2RYZHdqMHY=\"\n    },\n    body: new URLSearchParams({\n      refresh_token: refreshToken,\n      grant_type: \"refresh_token\",\n      token_format: \"jwt\",\n      scope: \"psn:mobile.v1 psn:clientapp\"\n    }).toString()\n  });\n\n  const raw = await res.json();\n\n  return {\n    accessToken: raw.access_token,\n    expiresIn: raw.expires_in,\n    idToken: raw.id_token,\n    refreshToken: raw.refresh_token,\n    refreshTokenExpiresIn: raw.refresh_token_expires_in,\n    scope: raw.scope,\n    tokenType: raw.token_type\n  };\n};\n","export enum TrophyRarity {\n  UltraRare,\n  VeryRare,\n  Rare,\n  Common\n}\n","import type { AllCallOptions } from \"../models\";\n\nexport const buildRequestUrl = (\n  baseUrl: string,\n  endpointUrl: string,\n  options: Partial<AllCallOptions> = {},\n  args: Record<string, string | number> = {}\n) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- This is an intentional pick.\n  const { headerOverrides, ...pickedOptions } = options;\n\n  const concatenated = `${baseUrl}/${endpointUrl}`;\n  const withoutDoubleSlashes = concatenated.replace(/([^:]\\/)\\/+/g, \"$1\");\n\n  let withArgs = withoutDoubleSlashes;\n  const queryParamValues: Record<string, string> = {};\n\n  for (const [argKey, argValue] of Object.entries({\n    ...args,\n    ...pickedOptions\n  })) {\n    if (withArgs.includes(`:${argKey}`)) {\n      withArgs = withArgs.replace(`:${argKey}`, String(argValue));\n    } else if (argValue !== undefined) {\n      queryParamValues[argKey] = String(argValue);\n    }\n  }\n\n  const queryString = new URLSearchParams(queryParamValues).toString();\n  return queryString.length > 0 ? `${withArgs}?${queryString}` : withArgs;\n};\n","import fetch from \"isomorphic-unfetch\";\n\nimport type { AuthorizationPayload, CallValidHeaders } from \"../models\";\n\nexport const call = async <T>(\n  config: {\n    url: string;\n    method?: \"GET\" | \"POST\";\n    headers?: CallValidHeaders;\n  },\n  authorization: AuthorizationPayload,\n  bodyPayload?: Record<string, any>\n) => {\n  const response = await fetch(config.url, {\n    method: config?.method ?? \"GET\",\n    headers: {\n      Authorization: `Bearer ${authorization.accessToken}`,\n      \"Content-Type\": \"application/json\",\n      ...config?.headers\n    },\n    body: JSON.stringify(bodyPayload)\n  });\n\n  return (await response.json()) as T;\n};\n","export const SEARCH_BASE_URL = \"https://m.np.playstation.com/api/search\";\n","import type {\n  AuthorizationPayload,\n  SocialAccountResult,\n  UniversalSearchDomains,\n  UniversalSearchResponse\n} from \"../models\";\nimport { buildRequestUrl } from \"../utils/buildRequestUrl\";\nimport { call } from \"../utils/call\";\nimport { SEARCH_BASE_URL } from \"./SEARCH_BASE_URL\";\n\nexport const makeUniversalSearch = async <R extends UniversalSearchDomains>(\n  authorization: AuthorizationPayload,\n  searchTerm: string,\n  domain: R\n) => {\n  const url = buildRequestUrl(SEARCH_BASE_URL, \"/v1/universalSearch\");\n\n  type AssertType<R> = R extends \"SocialAllAccounts\"\n    ? SocialAccountResult\n    : unknown;\n\n  return await call<UniversalSearchResponse<AssertType<typeof domain>>>(\n    { url, method: \"POST\" },\n    authorization,\n    {\n      searchTerm,\n      domainRequests: [\n        {\n          domain\n        }\n      ]\n    }\n  );\n};\n","export const TROPHY_BASE_URL = \"https://m.np.playstation.com/api/trophy\";\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  TitleTrophiesResponse\n} from \"../../models\";\nimport { buildRequestUrl } from \"../../utils/buildRequestUrl\";\nimport { call } from \"../../utils/call\";\nimport { TROPHY_BASE_URL } from \"../TROPHY_BASE_URL\";\n\ntype GetTitleTrophiesOptions = Pick<\n  AllCallOptions,\n  \"headerOverrides\" | \"limit\" | \"npServiceName\" | \"offset\"\n>;\n\n/**\n * A call to this function will retrieve the trophy list of a\n * single - or all - trophy groups for a title. A title can have multiple\n * groups of trophies (a `\"default\"` group which all titles have, and additional\n * groups starting with the name `\"001\"` and incrementing for each additional group). To retrieve\n * trophies from all groups within a title (ie. the full trophy set), then\n * `trophyGroupId` should be set to `\"all\"`.\n *\n * When the title platform is PS3, PS4 or PS Vita you __must__ specify the\n * `npServiceName` parameter as `\"trophy\"`.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param npCommunicationId Unique ID of the title.\n * @param trophyGroupId `\"all\"` to return all trophies for the title, otherwise restrict results to a specific trophy group (such as a DLC).\n * @param options.npServiceName `\"trophy\"` for PS3, PS4, or PS Vita platforms. `\"trophy2\"` for the PS5 platform.\n * @param options.limit Limit the number of trophies returned.\n * @param options.offset Return trophy data from this result onwards.\n * @param options.headerOverrides Override the headers in the request to the PSN API, such as to change the language.\n */\nexport const getTitleTrophies = async (\n  authorization: AuthorizationPayload,\n  npCommunicationId: string,\n  trophyGroupId: string,\n  options?: Partial<GetTitleTrophiesOptions>\n): Promise<TitleTrophiesResponse> => {\n  const url = buildRequestUrl(\n    TROPHY_BASE_URL,\n    \"/v1/npCommunicationIds/:npCommunicationId/trophyGroups/:trophyGroupId/trophies\",\n    options,\n    { npCommunicationId, trophyGroupId }\n  );\n\n  return await call<TitleTrophiesResponse>(\n    { url, headers: options?.headerOverrides },\n    authorization\n  );\n};\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  TitleTrophyGroupsResponse\n} from \"../../models\";\nimport { buildRequestUrl } from \"../../utils/buildRequestUrl\";\nimport { call } from \"../../utils/call\";\nimport { TROPHY_BASE_URL } from \"../TROPHY_BASE_URL\";\n\ntype GetTitleTrophyGroupsOptions = Pick<\n  AllCallOptions,\n  \"npServiceName\" | \"headerOverrides\"\n>;\n\n/**\n * A title may have multiple groups of trophies. This is most commonly\n * seen in games which have DLC expansions where additional trophies are added.\n *\n * You can call this function for a specific title - using the\n * unique `npCommunicationId` for the title - and you will receive a\n * summary of all of the trophy groups associated with the title.\n * This also includes a summary of the number of trophies for the\n * title, broken down by group and grade (gold, silver, etc.).\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param npCommunicationId The unique ID of the game title you wish to retrieve the trophy groups list for.\n * @param options.npServiceName `\"trophy\"` for PS3, PS4, or PS Vita platforms. `\"trophy2\"` for the PS5 platform.\n * @param options.headerOverrides Override the headers in the request to the PSN API, such as to change the language.\n */\nexport const getTitleTrophyGroups = async (\n  authorization: AuthorizationPayload,\n  npCommunicationId: string,\n  options?: Partial<GetTitleTrophyGroupsOptions>\n): Promise<TitleTrophyGroupsResponse> => {\n  const url = buildRequestUrl(\n    TROPHY_BASE_URL,\n    \"/v1/npCommunicationIds/:npCommunicationId/trophyGroups\",\n    options,\n    { npCommunicationId }\n  );\n\n  return await call<TitleTrophyGroupsResponse>(\n    { url, headers: options?.headerOverrides },\n    authorization\n  );\n};\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  UserTitlesResponse\n} from \"../../models\";\nimport { buildRequestUrl } from \"../../utils/buildRequestUrl\";\nimport { call } from \"../../utils/call\";\nimport { TROPHY_BASE_URL } from \"../TROPHY_BASE_URL\";\n\ntype GetUserTitlesOptions = Pick<\n  AllCallOptions,\n  \"headerOverrides\" | \"limit\" | \"offset\"\n>;\n\n/**\n * A call to this function will retrieve the earned status of trophies for a user\n * from either a single - or all - trophy groups in a title. A title can have\n * multiple groups of trophies (a `\"default\"` group which all titles have, and\n * additional groups starting with a name of `\"001\"` and incrementing for each\n * additional group). To retrieve trophies from all groups within a title\n * (ie. the full trophy set), `trophyGroupId` should be set to `\"all\"`.\n *\n * The numeric `accountId` can be that of any PSN account for which the authenticating\n * account has permissions to view the trophy list. When querying the titles\n * associated with the authenticating account, the numeric `accountId` can be\n * substituted with `\"me\"`.\n *\n * To find a user's `accountId`, the `makeUniversalSearch()` function can be used.\n *\n * Included in the information returned is the titles' unique `npCommunicationId`.\n * This is required to make use of subsequent functions for requesting more specific\n * detail about a title's trophies.\n *\n * The results are presented in order of the `lastUpdatedDateTime` for the title,\n * so the first result will be the title for which a trophy was most recently earned\n * (or synced for the first time in the case of a game with 0% progress).\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param accountId The account whose trophy list is being accessed. Use `\"me\"` for the authenticating account.\n * @param options.limit Limit the number of titles returned.\n * @param options.offset Return title data from this result onwards.\n * @param options.headerOverrides Override the headers in the request to the PSN API, such as to change the language.\n */\nexport const getUserTitles = async (\n  authorization: AuthorizationPayload,\n  accountId: string,\n  options?: Partial<GetUserTitlesOptions>\n): Promise<UserTitlesResponse> => {\n  const url = buildRequestUrl(\n    TROPHY_BASE_URL,\n    \"/v1/users/:accountId/trophyTitles\",\n    options,\n    { accountId }\n  );\n\n  return await call<UserTitlesResponse>(\n    { url, headers: options?.headerOverrides },\n    authorization\n  );\n};\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  UserTrophiesEarnedForTitleResponse\n} from \"../../models\";\nimport { buildRequestUrl } from \"../../utils/buildRequestUrl\";\nimport { call } from \"../../utils/call\";\nimport { TROPHY_BASE_URL } from \"../TROPHY_BASE_URL\";\n\ntype GetUserTrophiesEarnedForTitleOptions = Pick<\n  AllCallOptions,\n  \"offset\" | \"npServiceName\" | \"limit\" | \"headerOverrides\"\n>;\n\n/**\n * A call to this function will retrieve the earned status of trophies for a user\n * from either a single - or all - trophy groups in a title. A title can have\n * multiple groups of trophies (a `\"default\"` group which all titles have, and\n * additional groups starting with a name of `\"001\"` and incrementing for each\n * additional group). To retrieve trophies from all groups within a title\n * (ie. the full trophy set), then `trophyGroupId` should be set to `\"all\"`.\n *\n * The numeric `accountId` can be that of any PSN account for which the\n * authenticating account has permissions to view the trophy list.\n * When querying the titles associated with the authenticating account, the\n * numeric `accountId` can be substituted with `\"me\"`.\n *\n * To find a user's `accountId`, the `makeUniversalSearch()` function can be used.\n *\n * This function returns the earned status of the\n * trophy only and no additional descriptive metadata (ie. trophy name,\n * trophy description). Use `getTitleTrophies()` to obtain this information.\n *\n * When the title platform is PS3, PS4, or PS Vita, you __must__ specify the\n * `npServiceName` option as `\"trophy\"`.\n *\n * If you attempt to query a title which the user does not have associated\n * with their account (ie. the title has not been launched and allowed to\n * sync at least once) then a Resource Not Found error will be thrown.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param accountId The account whose trophy list is being accessed. Use `\"me\"` for the authenticating account.\n * @param npCommunicationId Unique ID of the title.\n * @param trophyGroupId `\"all\"` to return all trophies for the title, otherwise restrict results to a specific trophy group (such as a DLC).\n * @param options.npServiceName `\"trophy\"` for PS3, PS4, or PS Vita platforms. `\"trophy2\"` for the PS5 platform.\n * @param options.limit Limit the number of trophies returned.\n * @param options.offset Return trophy data from this result onwards.\n * @param options.headerOverrides Override the headers in the request to the PSN API, such as to change the language.\n */\nexport const getUserTrophiesEarnedForTitle = async (\n  authorization: AuthorizationPayload,\n  accountId: string,\n  npCommunicationId: string,\n  trophyGroupId: string,\n  options?: Partial<GetUserTrophiesEarnedForTitleOptions>\n): Promise<UserTrophiesEarnedForTitleResponse> => {\n  const url = buildRequestUrl(\n    TROPHY_BASE_URL,\n    \"/v1/users/:accountId/npCommunicationIds/:npCommunicationId/trophyGroups/:trophyGroupId/trophies\",\n    options,\n    { accountId, npCommunicationId, trophyGroupId }\n  );\n\n  const response = await call<UserTrophiesEarnedForTitleResponse>(\n    { url, headers: options?.headerOverrides },\n    authorization\n  );\n\n  if ((response as any)?.error) {\n    throw new Error((response as any)?.error?.message ?? \"Unexpected Error\");\n  }\n\n  return response;\n};\n","import type {\n  AuthorizationPayload,\n  CallValidHeaders,\n  UserTrophyGroupEarningsForTitleResponse\n} from \"../../models\";\nimport { buildRequestUrl } from \"../../utils/buildRequestUrl\";\nimport { call } from \"../../utils/call\";\nimport { TROPHY_BASE_URL } from \"../TROPHY_BASE_URL\";\n\ninterface GetUserTrophyGroupEarningsForTitleOptions {\n  /**\n   * Not required unless the platform is PS3, PS4, or PS Vita.\n   * If one of these platforms, the value __must__ be `\"trophy\"`.\n   *\n   * `\"trophy\"` for PS3, PS4, or PS Vita platforms.\n   * `\"trophy2\"` for the PS5 platform.\n   */\n  npServiceName: \"trophy\" | \"trophy2\";\n\n  /*\n   * Override the headers in the request to the PSN API,\n   * such as to change the language.\n   */\n  headerOverrides: CallValidHeaders;\n}\n\n/**\n * A request to this endpoint function will retrieve a summary of the trophies earned for\n * a user broken down by trophy group within a title. A title can have\n * multiple groups of trophies (a `\"default\"` group which all titles have,\n * and additional groups beginning with the name `\"001\"` and incrementing for\n * each additional group).\n *\n * The numeric `accountId` can be that of any PSN account for which the\n * authenticating account has permissions to view the trophy list.\n * When querying the titles associated with the authenticating account, the\n * numeric `accountId` can be substituted with `\"me\"`.\n *\n * To find a user's `accountId`, the `makeUniversalSearch()` function can be used.\n *\n * This function calls an endpoint that returns the earned status of the\n * trophy only and no additional descriptive metadata (ie. trophy name,\n * trophy description). Use `getTitleTrophies()` to obtain this information.\n *\n *  When the title platform is PS3, PS4 or PS Vita you __must__ specify the\n * `npServiceName` option as `\"trophy\"`.\n *\n * If you attempt to query a title which the user does not have associated\n * with their account (ie. the title has not been launched and allowed to\n * sync at least once) then a Resource Not Found error will be thrown.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param accountId The account whose trophy list is being accessed. Use `\"me\"` for the authenticating account.\n * @param npCommunicationId Unique ID of the title.\n * @param options.npServiceName `\"trophy\"` for PS3, PS4, or PS Vita platforms. `\"trophy2\"` for the PS5 platform.\n * @param options.headerOverrides Override the headers in the request to the PSN API, such as to change the language.\n */\nexport const getUserTrophyGroupEarningsForTitle = async (\n  authorization: AuthorizationPayload,\n  accountId: string,\n  npCommunicationId: string,\n  options?: Partial<GetUserTrophyGroupEarningsForTitleOptions>\n): Promise<UserTrophyGroupEarningsForTitleResponse> => {\n  const url = buildRequestUrl(\n    TROPHY_BASE_URL,\n    \"/v1/users/:accountId/npCommunicationIds/:npCommunicationId/trophyGroups\",\n    options,\n    { accountId, npCommunicationId }\n  );\n\n  const response = await call<UserTrophyGroupEarningsForTitleResponse>(\n    { url, headers: options?.headerOverrides },\n    authorization\n  );\n\n  if ((response as any)?.error) {\n    throw new Error((response as any)?.error?.message ?? \"Unexpected Error\");\n  }\n\n  return response;\n};\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  UserTrophyProfileSummaryResponse\n} from \"../../models\";\nimport { buildRequestUrl } from \"../../utils/buildRequestUrl\";\nimport { call } from \"../../utils/call\";\nimport { TROPHY_BASE_URL } from \"../TROPHY_BASE_URL\";\n\ntype GetUserTrophyProfileSummaryOptions = Pick<\n  AllCallOptions,\n  \"headerOverrides\"\n>;\n\n/**\n * A call to this function will retrieve an overall summary of the number of\n * trophies earned for a user broken down by grade, as well as their current\n * overall trophy level, progress towards the next level, and which tier their\n * current level falls in to. The tiers are based on the [level changes introduced in 2020](https://andshrew.github.io/PlayStation-Trophies/images/psn-trophy-tiers.png).\n *\n * The numeric `accountId` can be that of any PSN account for which the\n * authenticating account has permissions to view the trophy list.\n * When querying the titles associated with the authenticating account, the\n * numeric `accountId` can be substituted with `\"me\"`.\n *\n * To find a user's `accountId`, the `makeUniversalSearch()` function can be used.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param accountId The account whose trophy list is being accessed. Use `\"me\"` for the authenticating account.\n * @param options.headerOverrides Override the headers in the request to the PSN API, such as to change the language.\n */\nexport const getUserTrophyProfileSummary = async (\n  authorization: AuthorizationPayload,\n  accountId: string,\n  options?: Partial<GetUserTrophyProfileSummaryOptions>\n): Promise<UserTrophyProfileSummaryResponse> => {\n  const url = buildRequestUrl(\n    TROPHY_BASE_URL,\n    \"/v1/users/:accountId/trophySummary\",\n    options,\n    { accountId }\n  );\n\n  return await call<UserTrophyProfileSummaryResponse>(\n    { url, headers: options?.headerOverrides },\n    authorization\n  );\n};\n","export const USER_BASE_URL =\n  \"https://m.np.playstation.com/api/userProfile/v1/internal/users\";\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  ProfileFromAccountIdResponse\n} from \"../models\";\nimport { buildRequestUrl } from \"../utils/buildRequestUrl\";\nimport { call } from \"../utils/call\";\nimport { USER_BASE_URL } from \"./USER_BASE_URL\";\n\ntype GetProfileFromAccountIdOptions = Pick<AllCallOptions, \"headerOverrides\">;\n\n/**\n * A call to this function will retrieve some profile information of the accountId being requested.\n * If the account's profile cannot be found (either due to non-existence or privacy settings),\n * an error will be thrown.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param accountId The accountId for the user you wish to retrieve a profile for.\n */\nexport const getProfileFromAccountId = async (\n  authorization: AuthorizationPayload,\n  accountId: string,\n  options?: GetProfileFromAccountIdOptions\n): Promise<ProfileFromAccountIdResponse> => {\n  const url = buildRequestUrl(USER_BASE_URL, \"/:accountId/profiles\", options, {\n    accountId\n  });\n  const response = await call<ProfileFromAccountIdResponse>(\n    { url },\n    authorization\n  );\n\n  if ((response as any)?.error) {\n    throw new Error((response as any)?.error?.message ?? \"Unexpected Error\");\n  }\n\n  return response;\n};\n","import type {\n  AuthorizationPayload,\n  ProfileFromUserNameResponse\n} from \"../models\";\nimport { call } from \"../utils/call\";\n\n/**\n * A call to this function will retrieve the profile of the username being requested.\n * If the user cannot be found (either due to non-existence or privacy settings),\n * an error will be thrown.\n *\n * This is a legacy API endpoint function. If you are just trying to get a user's\n * account ID, [`makeUniversalSearch()`](https://psn-api.achievements.app/api-docs/universal-search#makeuniversalsearch)\n * is recommended instead. This endpoint is here because it can return interesting\n * presence information when the user is playing on a legacy console such as a PS3.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param userName The username for the user you wish to retrieve a profile for.\n */\nexport const getProfileFromUserName = async (\n  authorization: AuthorizationPayload,\n  userName: string\n): Promise<ProfileFromUserNameResponse> => {\n  const url = `https://us-prof.np.community.playstation.net/userProfile/v1/users/${userName}/profile2?fields=npId,onlineId,accountId,avatarUrls,plus,aboutMe,languagesUsed,trophySummary(@default,level,progress,earnedTrophies),isOfficiallyVerified,personalDetail(@default,profilePictureUrls),personalDetailSharing,personalDetailSharingRequestMessageFlag,primaryOnlineStatus,presences(@default,@titleInfo,platform,lastOnlineDate,hasBroadcastData),requestMessageFlag,blocking,friendRelation,following,consoleAvailability`;\n\n  const response = await call<ProfileFromUserNameResponse>(\n    { url },\n    authorization\n  );\n\n  if ((response as any)?.error) {\n    throw new Error((response as any)?.error?.message ?? \"Unexpected Error\");\n  }\n\n  return response;\n};\n","import type {\n  AllCallOptions,\n  AuthorizationPayload,\n  GetUserFriendsAccountIdsResponse\n} from \"../models\";\nimport { buildRequestUrl } from \"../utils/buildRequestUrl\";\nimport { call } from \"../utils/call\";\nimport { USER_BASE_URL } from \"./USER_BASE_URL\";\n\ntype GetUserFriendsAccountIdsOptions = Pick<AllCallOptions, \"limit\" | \"offset\">;\n\n/**\n * A call to this function will retrieve the list of friended `accountId` values\n * associated with the given `accountId` parameter. If the user cannot be found\n * (either due to non-existence or privacy settings), an error will be thrown.\n *\n *  To find a user's `accountId`, the `makeUniversalSearch()` function can be used.\n *\n * @param authorization An object containing your access token, typically retrieved with `exchangeCodeForAccessToken()`.\n * @param accountId The account whose trophy list is being accessed. Use `\"me\"` for the authenticating account.\n */\nexport const getUserFriendsAccountIds = async (\n  authorization: AuthorizationPayload,\n  accountId: string,\n  options?: Partial<GetUserFriendsAccountIdsOptions>\n): Promise<GetUserFriendsAccountIdsResponse> => {\n  const url = buildRequestUrl(USER_BASE_URL, \"/:accountId/friends\", options, {\n    accountId\n  });\n\n  const response = await call<GetUserFriendsAccountIdsResponse>(\n    { url },\n    authorization\n  );\n\n  // If you are unable to access the user's friends list, a\n  // \"Not permitted by access control\" error will be thrown.\n  if ((response as any)?.error) {\n    throw new Error((response as any)?.error?.message ?? \"Unexpected Error\");\n  }\n\n  return response;\n};\n"],"names":["undefined","AUTH_BASE_URL","exchangeCodeForAccessToken","accessCode","requestUrl","fetch","method","headers","Authorization","body","URLSearchParams","code","redirect_uri","grant_type","token_format","toString","res","json","raw","accessToken","access_token","expiresIn","expires_in","idToken","id_token","refreshToken","refresh_token","refreshTokenExpiresIn","refresh_token_expires_in","scope","tokenType","token_type","exchangeNpssoForCode","npssoToken","queryString","access_type","client_id","response_type","Cookie","redirect","responseHeaders","has","get","includes","Error","redirectLocation","redirectParams","split","exchangeRefreshTokenForAuthTokens","TrophyRarity","buildRequestUrl","baseUrl","endpointUrl","options","args","pickedOptions","concatenated","withoutDoubleSlashes","replace","withArgs","queryParamValues","Object","entries","argKey","argValue","String","length","call","config","authorization","bodyPayload","url","JSON","stringify","response","SEARCH_BASE_URL","makeUniversalSearch","searchTerm","domain","domainRequests","TROPHY_BASE_URL","getTitleTrophies","npCommunicationId","trophyGroupId","headerOverrides","getTitleTrophyGroups","getUserTitles","accountId","getUserTrophiesEarnedForTitle","error","message","getUserTrophyGroupEarningsForTitle","getUserTrophyProfileSummary","USER_BASE_URL","getProfileFromAccountId","getProfileFromUserName","userName","getUserFriendsAccountIds"],"mappings":"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"}